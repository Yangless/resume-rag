import re
metaprompt = """
            <Task>
            从提供的简历文本总结，提取重要信息，分类以下7类信息：
            基本信息、教育经历、工作经历、项目经历、培训经历、个人评价、技能证书。返回格式严格为JSON对象。
            JSON对象必须且仅包含以下7个顶级键
            </Task>
            
            <Inputs>
            {$RESUME_TEXT}
            </Inputs>
            
            <Instructions Structure>
            
            1. **角色扮演**: 首先，我会指示AI扮演一个专业的人力资源（HR）信息提取助手。
            2. **任务定义**: 明确告知AI它的任务是从给定的简历文本中提取信息并生成一个结构化的JSON。
            3. **输入提供**: 我会将`{$RESUME_TEXT}`变量放置在一个清晰的XML标签`<resume_text>`内，这样AI能准确地知道哪部分是需要处理的简历原文。
            4. **核心指令 - JSON结构**: 我会非常详细地定义JSON的结构。
            
               \*   强调必须且只能包含7个指定的顶级键 (`基本信息`, `教育经历`, `工作经历`, `项目经历`, `培训经历`, `个人评价`, `技能证书`)。
               \*   对每个键所对应的值的格式进行建议（例如，`教育经历`应该是一个包含多个对象的列表）。
            
            5. **处理缺失信息**: 这是一个关键规则。我会指示AI，如果简历中缺少某一类信息（例如没有“培训经历”），则对应的键值应为空列表`[]`或空字符串`""`，而不是省略该键。这确保了输出JSON结构的统一性。
            6. **格式化要求**: 我会强调最终的输出必须是一个纯净的、不包含任何额外解释或Markdown标记（如```json ...```）的JSON对象。整个回答应以`{`开始，以`}`结束。
            7. **提供范例**: 我会构建一个简单的简历文本和对应的完美JSON输出作为示例。示例是让AI理解复杂指令的最有效方式。
            
            </Instructions Structure>
            
            <Instructions>
            你是一个专业的人力资源（HR）信息提取AI助手。你的任务是仔细阅读一份简历文本，并从中提取关键信息，然后按照严格的JSON格式输出。
            
            这是需要你分析的简历文本：
            <resume_text>
            {$RESUME_TEXT}
            </resume_text>
            
            请遵循以下规则进行信息提取和格式化：
            
            1. **输出格式**: 你的最终输出**必须**是一个单一、完整、有效的JSON对象。不要在JSON对象前后添加任何说明性文字、注释或Markdown代码块（例如 json）。你的回答必须以 { 开始，并以 } 结束。
            2. **JSON结构**: 生成的JSON对象**必须**包含以下七个顶级键，且仅包含这七个键。请使用中文作为键名：
               - "基本信息": (对象) 包含姓名、电话、邮箱、求职意向等个人基本资料。
               - "教育经历": (对象数组 [{}]) 包含所有教育背景。每个对象应包含学校、专业、学历、在校时间等字段。
               - "工作经历": (对象数组 [{}]) 包含所有工作经验。每个对象应包含公司名称、职位、在职时间、工作内容等字段。
               - "项目经历": (对象数组 [{}]) 包含所有项目经验。每个对象应包含项目名称、项目角色、项目时间、项目描述等字段。
               - "培训经历": (对象数组 [{}]) 包含所有培训经历。每个对象应包含培训机构、课程名称、时间等。
               - "个人评价": (字符串 "") 包含简历中的自我评价或职业总结部分。
               - "技能证书": (对象) 包含专业技能和获得的证书。可以按技能类别分类，例如 {"语言技能": [], "专业技能": [], "证书": []}。
            3. **处理缺失信息**: 如果简历中没有找到某个类别的信息（例如，没有任何“培训经历”），请不要省略该键。对于期望是对象数组的键（如教育经历, 工作经历等），请使用空数组 [] 作为其值；对于期望是字符串的键（如个人评价），请使用空字符串 "" 作为其值；对于期望是对象的键（如基本信息），请使用空对象 {}。

"""
prompt = metaprompt.replace("{$RESUME_TEXT}", resume)
variable_string = ""
assistant_partial = "<Inputs>"
if variable_string:
    assistant_partial += variable_string + "\n</Inputs>\n<Instructions Structure>"

message = LLM.messages.create(
    model=llm,
    max_tokens=4096,
    messages=[
        {
            "role": "user",
            "content":  prompt
        },
        {
            "role": "assistant",
            "content": assistant_partial
        }
    ],
).content[0].text